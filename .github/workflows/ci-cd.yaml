name: Flutter CI/CD Workflow

on:
  push:
    branches:
      - main
      - release/*
      - feature/*
  pull_request:
    branches:
      - main
      - release/*
  workflow_dispatch:

jobs:
  build:
    name: Build, Test, and Deploy Flutter Project
    runs-on: ubuntu-latest

    env:
      FLUTTER_ENV: development
      API_URL: ${{ secrets.API_URL }}
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

    steps:
      # Checkout code from GitHub
      - name: Check out repository
        uses: actions/checkout@v3

      # Cache Flutter Dependencies
      - name: Cache Flutter Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      # Setup Flutter SDK
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.4'  # Cambiamos la versión de Flutter para que use Dart >= 3.2.0

      # Verify Flutter installation
      - name: Flutter Doctor
        run: flutter doctor

      # Install dependencies
      - name: Install dependencies
        run: flutter pub get

      # Run Unit Tests (Jest-like equivalent en Flutter)
      - name: Run Unit Tests
        run: flutter test --coverage

      # Collect Coverage Report (opcional si se necesita un reporte detallado)
      - name: Upload Test Coverage Report
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/lcov.info

      # Run Integration/E2E Tests (si tienes pruebas de integración)
      - name: Run Integration Tests
        if: github.ref == 'refs/heads/development' || startsWith(github.ref, 'refs/heads/feature/')
        run: flutter drive --target=test_driver/app.dart

      # Deploy (solo para ramas main y release)
  deploy:
    name: Deploy Flutter App
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/')
    steps:
      # Checkout code from GitHub
      - name: Check out repository
        uses: actions/checkout@v3

      # Setup Flutter SDK
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.4'

      # Run Deployment Script (cambia este paso según tu proceso de despliegue)
      - name: Deploy Application
        run: echo "Desplegando la aplicación..."  # Aquí se debería colocar el script o comando específico para el despliegue
